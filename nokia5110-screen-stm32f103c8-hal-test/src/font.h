#ifndef LCD5110_FONTS
#define LCD5110_FONTS

#include <stdint.h>

#define FONT_HEADER_BYTES 4
#define FONT_HEADER_X_SIZE_INDEX 0       // font[0] is the x size in px of a char of the font
#define FONT_HEADER_Y_SIZE_INDEX 1       // font[1] is the y size in px of a char of the font
#define FONT_HEADER_ASCII_OFFSET_INDEX 2 // font[2] is the ascii value of the first char of the font
#define FONT_HEADER_CHARS_COUNT_INDEX 3    // font[3] is the ... ?

// Default font
// Each char is encoded on 6 bytes => 6px (width) x 8px (height = 1 row)
// + 4 config bytes at the beginning
static const uint8_t Ascii6_8[] =
    {
        0x06 /* char width = 6 px */, 0x08 /* char height = 8px = 1 row */, 0x20 /* first char ASCII code = 0x20 (space) */, 0x5C /* contains 92 chars */,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // space (asci code)
        0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, // !
        0x00, 0x00, 0x07, 0x00, 0x07, 0x00, // "
        0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14, // #
        0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12, // $
        0x00, 0x62, 0x64, 0x08, 0x13, 0x23, // %
        0x00, 0x36, 0x49, 0x55, 0x22, 0x50, // &
        0x00, 0x00, 0x05, 0x03, 0x00, 0x00, // '
        0x00, 0x00, 0x1c, 0x22, 0x41, 0x00, // (
        0x00, 0x00, 0x41, 0x22, 0x1c, 0x00, // )
        0x00, 0x14, 0x08, 0x3E, 0x08, 0x14, // *
        0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, // +
        0x00, 0x00, 0x00, 0xA0, 0x60, 0x00, // ,
        0x00, 0x08, 0x08, 0x08, 0x08, 0x08, // -
        0x00, 0x00, 0x60, 0x60, 0x00, 0x00, // .
        0x00, 0x20, 0x10, 0x08, 0x04, 0x02, // /
        0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E, // 0
        0x00, 0x00, 0x42, 0x7F, 0x40, 0x00, // 1
        0x00, 0x42, 0x61, 0x51, 0x49, 0x46, // 2
        0x00, 0x21, 0x41, 0x45, 0x4B, 0x31, // 3
        0x00, 0x18, 0x14, 0x12, 0x7F, 0x10, // 4
        0x00, 0x27, 0x45, 0x45, 0x45, 0x39, // 5
        0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30, // 6
        0x00, 0x01, 0x71, 0x09, 0x05, 0x03, // 7
        0x00, 0x36, 0x49, 0x49, 0x49, 0x36, // 8
        0x00, 0x06, 0x49, 0x49, 0x29, 0x1E, // 9
        0x00, 0x00, 0x36, 0x36, 0x00, 0x00, // :
        0x00, 0x00, 0x56, 0x36, 0x00, 0x00, // ;
        0x00, 0x08, 0x14, 0x22, 0x41, 0x00, // <
        0x00, 0x14, 0x14, 0x14, 0x14, 0x14, // =
        0x00, 0x00, 0x41, 0x22, 0x14, 0x08, // >
        0x00, 0x02, 0x01, 0x51, 0x09, 0x06, // ?
        0x00, 0x32, 0x49, 0x59, 0x51, 0x3E, // @
        0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C, // A
        0x00, 0x7F, 0x49, 0x49, 0x49, 0x36, // B
        0x00, 0x3E, 0x41, 0x41, 0x41, 0x22, // C
        0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C, // D
        0x00, 0x7F, 0x49, 0x49, 0x49, 0x41, // E
        0x00, 0x7F, 0x09, 0x09, 0x09, 0x01, // F
        0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A, // G
        0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F, // H
        0x00, 0x00, 0x41, 0x7F, 0x41, 0x00, // I
        0x00, 0x20, 0x40, 0x41, 0x3F, 0x01, // J
        0x00, 0x7F, 0x08, 0x14, 0x22, 0x41, // K
        0x00, 0x7F, 0x40, 0x40, 0x40, 0x40, // L
        0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F, // M
        0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F, // N
        0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E, // O
        0x00, 0x7F, 0x09, 0x09, 0x09, 0x06, // P
        0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E, // Q
        0x00, 0x7F, 0x09, 0x19, 0x29, 0x46, // R
        0x00, 0x46, 0x49, 0x49, 0x49, 0x31, // S
        0x00, 0x01, 0x01, 0x7F, 0x01, 0x01, // T
        0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F, // U
        0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F, // V
        0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F, // W
        0x00, 0x63, 0x14, 0x08, 0x14, 0x63, // X
        0x00, 0x07, 0x08, 0x70, 0x08, 0x07, // Y
        0x00, 0x61, 0x51, 0x49, 0x45, 0x43, // Z
        0x00, 0x00, 0x7F, 0x41, 0x41, 0x00, // [
        0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55, // 55
        0x00, 0x00, 0x41, 0x41, 0x7F, 0x00, // ]
        0x00, 0x04, 0x02, 0x01, 0x02, 0x04, // ^
        0x00, 0x40, 0x40, 0x40, 0x40, 0x40, // _
        0x00, 0x00, 0x01, 0x02, 0x04, 0x00, // '
        0x00, 0x20, 0x54, 0x54, 0x54, 0x78, // a
        0x00, 0x7F, 0x48, 0x44, 0x44, 0x38, // b
        0x00, 0x38, 0x44, 0x44, 0x44, 0x20, // c
        0x00, 0x38, 0x44, 0x44, 0x48, 0x7F, // d
        0x00, 0x38, 0x54, 0x54, 0x54, 0x18, // e
        0x00, 0x08, 0x7E, 0x09, 0x01, 0x02, // f
        0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C, // g
        0x00, 0x7F, 0x08, 0x04, 0x04, 0x78, // h
        0x00, 0x00, 0x44, 0x7D, 0x40, 0x00, // i
        0x00, 0x40, 0x80, 0x84, 0x7D, 0x00, // j
        0x00, 0x7F, 0x10, 0x28, 0x44, 0x00, // k
        0x00, 0x00, 0x41, 0x7F, 0x40, 0x00, // l
        0x00, 0x7C, 0x04, 0x18, 0x04, 0x78, // m
        0x00, 0x7C, 0x08, 0x04, 0x04, 0x78, // n
        0x00, 0x38, 0x44, 0x44, 0x44, 0x38, // o
        0x00, 0xFC, 0x24, 0x24, 0x24, 0x18, // p
        0x00, 0x18, 0x24, 0x24, 0x18, 0xFC, // q
        0x00, 0x7C, 0x08, 0x04, 0x04, 0x08, // r
        0x00, 0x48, 0x54, 0x54, 0x54, 0x20, // s
        0x00, 0x04, 0x3F, 0x44, 0x40, 0x20, // t
        0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C, // u
        0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C, // v
        0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C, // w
        0x00, 0x44, 0x28, 0x10, 0x28, 0x44, // x
        0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C, // y
        0x00, 0x44, 0x64, 0x54, 0x4C, 0x44, // z
        0x00, 0x00, 0x06, 0x09, 0x09, 0x06  // horiz lines
};

// Font "Terminal11x16"
// Each char is encoded on 22 bytes => 11px (width) x 16px (height = 2 rows)
// + 4 config bytes at the beginning
static const unsigned char Ascii11_16[] = {
    11 /* char width = 11 px */, 16 /* char height = 16px = 2 rows */, 0x20 /* first char ASCII code = 0x20 (space) */, 96 /* contains 96 chars */,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforcharspace(ascii0x20)
    0x00, 0x00, 0x00, 0x7C, 0xFF, 0xFF, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar!
    0x00, 0x00, 0x3C, 0x3C, 0x00, 0x00, 0x3C, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar"
    0x00, 0x10, 0x90, 0xF0, 0x7E, 0x1E, 0x90, 0xF0, 0x7E, 0x1E, 0x10, 0x02, 0x1E, 0x1F, 0x03, 0x02, 0x1E, 0x1F, 0x03, 0x02, 0x00, 0x00, //Codeforchar#
    0x00, 0x78, 0xFC, 0xCC, 0xFF, 0xFF, 0xCC, 0xCC, 0x88, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x0C, 0x3F, 0x3F, 0x0C, 0x0F, 0x07, 0x00, 0x00, //Codeforchar$
    0x00, 0x38, 0x38, 0x38, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x30, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x01, 0x38, 0x38, 0x38, 0x00, //Codeforchar%
    0x00, 0x00, 0xB8, 0xFC, 0xC6, 0xE2, 0x3E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x31, 0x21, 0x37, 0x1E, 0x1C, 0x36, 0x22, 0x00, //Codeforchar&
    0x00, 0x00, 0x00, 0x27, 0x3F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar'
    0x00, 0x00, 0xF0, 0xFC, 0xFE, 0x07, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1F, 0x38, 0x20, 0x20, 0x00, 0x00, 0x00, //Codeforchar(
    0x00, 0x00, 0x01, 0x01, 0x07, 0xFE, 0xFC, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x38, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00, //Codeforchar)
    0x00, 0x98, 0xB8, 0xE0, 0xF8, 0xF8, 0xE0, 0xB8, 0x98, 0x00, 0x00, 0x00, 0x0C, 0x0E, 0x03, 0x0F, 0x0F, 0x03, 0x0E, 0x0C, 0x00, 0x00, //Codeforchar*
    0x00, 0x80, 0x80, 0x80, 0xF0, 0xF0, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x0F, 0x0F, 0x01, 0x01, 0x01, 0x00, 0x00, //Codeforchar+
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB8, 0xF8, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar
    0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, //Codeforchar-
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar.
    0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x18, 0x1C, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar/
    0xF8, 0xFE, 0x06, 0x03, 0x83, 0xC3, 0x63, 0x33, 0x1E, 0xFE, 0xF8, 0x07, 0x1F, 0x1E, 0x33, 0x31, 0x30, 0x30, 0x30, 0x18, 0x1F, 0x07, //Codeforchar0
    0x00, 0x00, 0x0C, 0x0C, 0x0E, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x00, //Codeforchar1
    0x1C, 0x1E, 0x07, 0x03, 0x03, 0x83, 0xC3, 0xE3, 0x77, 0x3E, 0x1C, 0x30, 0x38, 0x3C, 0x3E, 0x37, 0x33, 0x31, 0x30, 0x30, 0x30, 0x30, //Codeforchar2
    0x0C, 0x0E, 0x07, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xE7, 0x7E, 0x3C, 0x0C, 0x1C, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, 0x1F, 0x0E, //Codeforchar3
    0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x3F, 0x3F, 0x03, 0x03, //Codeforchar4
    0x3F, 0x7F, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0xE3, 0xC3, 0x83, 0x0C, 0x1C, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x38, 0x1F, 0x0F, //Codeforchar5
    0xC0, 0xF0, 0xF8, 0xDC, 0xCE, 0xC7, 0xC3, 0xC3, 0xC3, 0x80, 0x00, 0x0F, 0x1F, 0x39, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, 0x1F, 0x0F, //Codeforchar6
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xC3, 0xF3, 0x3F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x30, 0x3C, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, //Codeforchar7
    0x00, 0xBC, 0xFE, 0xE7, 0xC3, 0xC3, 0xC3, 0xE7, 0xFE, 0xBC, 0x00, 0x0F, 0x1F, 0x39, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, 0x1F, 0x0F, //Codeforchar8
    0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xE7, 0xFE, 0xFC, 0x00, 0x00, 0x30, 0x30, 0x30, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x00, //Codeforchar9
    0x00, 0x00, 0x00, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar:
    0x00, 0x00, 0x00, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C, 0xFC, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar,
    0x00, 0xC0, 0xE0, 0xF0, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0E, 0x1C, 0x38, 0x30, 0x00, 0x00, //Codeforchar<
    0x00, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x00, //Codeforchar=
    0x00, 0x03, 0x07, 0x0E, 0x1C, 0x38, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x30, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, //Codeforchar>
    0x1C, 0x1E, 0x07, 0x03, 0x83, 0xC3, 0xE3, 0x77, 0x3E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar?
    0xF8, 0xFE, 0x07, 0xF3, 0xFB, 0x1B, 0xFB, 0xFB, 0x07, 0xFE, 0xF8, 0x0F, 0x1F, 0x18, 0x33, 0x37, 0x36, 0x37, 0x37, 0x36, 0x03, 0x01, //Codeforchar@
    0x00, 0x00, 0xE0, 0xFC, 0x1F, 0x1F, 0xFC, 0xE0, 0x00, 0x00, 0x00, 0x38, 0x3F, 0x07, 0x06, 0x06, 0x06, 0x06, 0x07, 0x3F, 0x38, 0x00, //CodeforcharA
    0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xE7, 0xFE, 0xBC, 0x00, 0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, 0x1F, 0x0F, 0x00, //CodeforcharB
    0xF0, 0xFC, 0x0E, 0x07, 0x03, 0x03, 0x03, 0x07, 0x0E, 0x0C, 0x00, 0x03, 0x0F, 0x1C, 0x38, 0x30, 0x30, 0x30, 0x38, 0x1C, 0x0C, 0x00, //CodeforcharC
    0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x07, 0x0E, 0xFC, 0xF0, 0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x38, 0x1C, 0x0F, 0x03, 0x00, //CodeforcharD
    0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x03, 0x03, 0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, //CodeforcharE
    0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x03, 0x03, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //CodeforcharF
    0xF0, 0xFC, 0x0E, 0x07, 0x03, 0xC3, 0xC3, 0xC3, 0xC7, 0xC6, 0x00, 0x03, 0x0F, 0x1C, 0x38, 0x30, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, //CodeforcharG
    0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, //CodeforcharH
    0x00, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x3F, 0x3F, 0x30, 0x30, 0x00, 0x00, 0x00, //CodeforcharI
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x0E, 0x1E, 0x38, 0x30, 0x30, 0x30, 0x30, 0x38, 0x1F, 0x07, 0x00, //CodeforcharJ
    0xFF, 0xFF, 0xC0, 0xE0, 0xF0, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x00, 0x3F, 0x3F, 0x00, 0x01, 0x03, 0x07, 0x0E, 0x1C, 0x38, 0x30, 0x00, //CodeforcharK
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, //CodeforcharL
    0xFF, 0xFF, 0x1E, 0x78, 0xE0, 0xE0, 0x78, 0x1E, 0xFF, 0xFF, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x3F, 0x3F, 0x00, //CodeforcharM
    0xFF, 0xFF, 0x0E, 0x38, 0xF0, 0xC0, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x03, 0x07, 0x1C, 0x3F, 0x3F, 0x00, //CodeforcharN
    0xF0, 0xFC, 0x0E, 0x07, 0x03, 0x03, 0x07, 0x0E, 0xFC, 0xF0, 0x00, 0x03, 0x0F, 0x1C, 0x38, 0x30, 0x30, 0x38, 0x1C, 0x0F, 0x03, 0x00, //CodeforcharO
    0xFF, 0xFF, 0x83, 0x83, 0x83, 0x83, 0x83, 0xC7, 0xFE, 0x7C, 0x00, 0x3F, 0x3F, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, //CodeforcharP
    0xF0, 0xFC, 0x0E, 0x07, 0x03, 0x03, 0x07, 0x0E, 0xFC, 0xF0, 0x00, 0x03, 0x0F, 0x1C, 0x38, 0x30, 0x36, 0x3E, 0x1C, 0x3F, 0x33, 0x00, //CodeforcharQ
    0xFF, 0xFF, 0x83, 0x83, 0x83, 0x83, 0x83, 0xC7, 0xFE, 0x7C, 0x00, 0x3F, 0x3F, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x1D, 0x38, 0x30, 0x00, //CodeforcharR
    0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0x8E, 0x0C, 0x00, 0x0C, 0x1C, 0x38, 0x30, 0x30, 0x30, 0x30, 0x39, 0x1F, 0x0F, 0x00, //CodeforcharS
    0x00, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, //CodeforcharT
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x07, 0x1F, 0x38, 0x30, 0x30, 0x30, 0x30, 0x38, 0x1F, 0x07, 0x00, //CodeforcharU
    0x07, 0x3F, 0xF8, 0xC0, 0x00, 0x00, 0xC0, 0xF8, 0x3F, 0x07, 0x00, 0x00, 0x00, 0x01, 0x0F, 0x3E, 0x3E, 0x0F, 0x01, 0x00, 0x00, 0x00, //CodeforcharV
    0xFF, 0xFF, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x3F, 0x3F, 0x1C, 0x06, 0x03, 0x03, 0x06, 0x1C, 0x3F, 0x3F, 0x00, //CodeforcharW
    0x03, 0x0F, 0x1C, 0x30, 0xE0, 0xE0, 0x30, 0x1C, 0x0F, 0x03, 0x00, 0x30, 0x3C, 0x0E, 0x03, 0x01, 0x01, 0x03, 0x0E, 0x3C, 0x30, 0x00, //CodeforcharX
    0x03, 0x0F, 0x3C, 0xF0, 0xC0, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, //CodeforcharY
    0x03, 0x03, 0x03, 0x03, 0xC3, 0xE3, 0x33, 0x1F, 0x0F, 0x03, 0x00, 0x30, 0x3C, 0x3E, 0x33, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, //CodeforcharZ
    0x00, 0x00, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, //Codeforchar[
    0x0E, 0x1C, 0x38, 0x70, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0E, 0x1C, 0x18, //Codefor<Backslash>
    0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, 0x00, 0x00, //Codeforchar]
    0x60, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x0E, 0x1C, 0x38, 0x70, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar^
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, //Codeforchar_
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x7E, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar`
    0x00, 0x40, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xC0, 0x00, 0x1C, 0x3E, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x3F, 0x00, //Codeforchara
    0xFF, 0xFF, 0xC0, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xC0, 0x80, 0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x30, 0x38, 0x1F, 0x0F, 0x00, //Codeforcharb
    0x80, 0xC0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0xC0, 0x80, 0x00, 0x0F, 0x1F, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x08, 0x00, //Codeforcharc
    0x80, 0xC0, 0xE0, 0x60, 0x60, 0x60, 0xE0, 0xC0, 0xFF, 0xFF, 0x00, 0x0F, 0x1F, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, //Codeforchard
    0x80, 0xC0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0xC0, 0x80, 0x00, 0x0F, 0x1F, 0x3B, 0x33, 0x33, 0x33, 0x33, 0x33, 0x13, 0x01, 0x00, //Codeforchare
    0xC0, 0xC0, 0xFC, 0xFE, 0xC7, 0xC3, 0xC3, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforcharf
    0x80, 0xC0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x00, 0x03, 0xC7, 0xCE, 0xCC, 0xCC, 0xCC, 0xCC, 0xE6, 0x7F, 0x3F, 0x00, //Codeforcharg
    0xFF, 0xFF, 0xC0, 0x60, 0x60, 0x60, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, //Codeforcharh
    0x00, 0x00, 0x00, 0x60, 0xEC, 0xEC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x3F, 0x3F, 0x30, 0x30, 0x00, 0x00, 0x00, //Codeforchari
    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xEC, 0xEC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xE0, 0xC0, 0xC0, 0xFF, 0x7F, 0x00, 0x00, 0x00, //Codeforcharj
    0x00, 0xFF, 0xFF, 0x00, 0x80, 0xC0, 0xE0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x03, 0x07, 0x0F, 0x1C, 0x38, 0x30, 0x00, 0x00, //Codeforchark
    0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x3F, 0x3F, 0x30, 0x30, 0x00, 0x00, 0x00, //Codeforcharl
    0xE0, 0xC0, 0xE0, 0xE0, 0xC0, 0xC0, 0xE0, 0xE0, 0xC0, 0x80, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x3F, 0x3F, 0x00, //Codeforcharm
    0x00, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, //Codeforcharn
    0x80, 0xC0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xC0, 0x80, 0x00, 0x0F, 0x1F, 0x38, 0x30, 0x30, 0x30, 0x30, 0x38, 0x1F, 0x0F, 0x00, //Codeforcharo
    0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xC0, 0x80, 0x00, 0xFF, 0xFF, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x1C, 0x0F, 0x07, 0x00, //Codeforcharp
    0x80, 0xC0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x00, 0x07, 0x0F, 0x1C, 0x18, 0x18, 0x18, 0x18, 0x0C, 0xFF, 0xFF, 0x00, //Codeforcharq
    0x00, 0xE0, 0xE0, 0xC0, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xC0, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforcharr
    0xC0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x40, 0x00, 0x00, 0x00, 0x11, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x1E, 0x00, 0x00, 0x00, //Codeforchars
    0x60, 0x60, 0xFE, 0xFE, 0x60, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, //Codeforchart
    0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0x00, 0x0F, 0x1F, 0x38, 0x30, 0x30, 0x30, 0x30, 0x18, 0x3F, 0x3F, 0x00, //Codeforcharu
    0x60, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0x60, 0x00, 0x00, 0x01, 0x07, 0x1E, 0x38, 0x38, 0x1E, 0x07, 0x01, 0x00, 0x00, //Codeforcharv
    0xE0, 0xE0, 0x00, 0x00, 0xE0, 0xE0, 0x00, 0x00, 0xE0, 0xE0, 0x00, 0x07, 0x1F, 0x38, 0x1C, 0x0F, 0x0F, 0x1C, 0x38, 0x1F, 0x07, 0x00, //Codeforcharw
    0x60, 0xE0, 0xC0, 0x80, 0x00, 0x80, 0xC0, 0xE0, 0x60, 0x00, 0x00, 0x30, 0x38, 0x1D, 0x0F, 0x07, 0x0F, 0x1D, 0x38, 0x30, 0x00, 0x00, //Codeforcharx
    0x00, 0x60, 0xE0, 0x80, 0x00, 0x00, 0x80, 0xE0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x81, 0xE7, 0x7E, 0x1E, 0x07, 0x01, 0x00, 0x00, 0x00, //Codeforchary
    0x60, 0x60, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x60, 0x20, 0x00, 0x00, 0x30, 0x38, 0x3C, 0x36, 0x33, 0x31, 0x30, 0x30, 0x30, 0x00, 0x00, //Codeforcharz
    0x00, 0x80, 0xC0, 0xFC, 0x7E, 0x07, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1F, 0x3F, 0x70, 0x60, 0x60, 0x60, 0x00, 0x00, //Codeforchar{
    0x00, 0x00, 0x00, 0x00, 0xBF, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar|
    0x00, 0x03, 0x03, 0x03, 0x07, 0x7E, 0xFC, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x60, 0x60, 0x60, 0x70, 0x3F, 0x1F, 0x01, 0x00, 0x00, 0x00, //Codeforchar}
    0x10, 0x18, 0x0C, 0x04, 0x0C, 0x18, 0x10, 0x18, 0x0C, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //Codeforchar~
    0x00, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  //Codefor<Degrees>
};

// Font "ASCII_SEVEN"
// Each char is encoded on 24 bytes => 12px (width) x 16px (height = 2 rows)
// + 4 config bytes at the beginning
static const uint8_t Ascii12_16[] = {
    12 /* char width = 12 px */, 16 /* char height = 16px = 2 rows */, 0x20 /* first char ASCII code = 0x20 (space) */, 59 /* contains 59 chars */,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //
    0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, //!
    0x00, 0x00, 0x00, 0xFC, 0xFC, 0x00, 0x00, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //"
    0x00, 0x00, 0x10, 0x10, 0xFE, 0x10, 0x10, 0xFE, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x7F, 0x08, 0x08, 0x7F, 0x08, 0x08, 0x00, 0x00, //#
    0x00, 0x00, 0x00, 0x70, 0xD8, 0xFE, 0x0C, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x18, 0x3F, 0x1B, 0x06, 0x00, 0x00, 0x00, 0x00, //$
    0x00, 0x00, 0x00, 0x3E, 0x22, 0x3E, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x00, 0x00, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00, 0x3E, 0x22, 0x3E, 0x00, //%
    0x00, 0x7f, 0x7f, 0x6b, 0x63, 0x68, 0x78, 0x78, 0x00, 0x00, 0x00, 0x00, 0X00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0X00, //&
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //'
    0x00, 0x00, 0xFC, 0xFE, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //(
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xFE, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x3F, 0x1F, 0x00, 0x00, //)
    0x00, 0xC6, 0xCC, 0xD8, 0xF0, 0xFE, 0xFE, 0xF0, 0xD8, 0xCC, 0xC6, 0x00, 0x00, 0x18, 0x0C, 0x06, 0x03, 0x7F, 0x7F, 0x03, 0x06, 0x0C, 0x18, 0x00, //*
    0x00, 0x80, 0x80, 0x80, 0xFE, 0xFE, 0xFE, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x7F, 0x7F, 0x7F, 0x03, 0x03, 0x03, 0x00, 0x00, //+
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x7E, 0x7F, 0x03, 0x00, 0x00, 0x00, 0x00, //
    0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, //-
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, //.
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x70, 0x38, 0x00, 0x00, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, ///
    0x00, 0x00, 0xFF, 0xFF, 0x03, 0x83, 0x43, 0x23, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x31, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, 0x00, //0
    0x00, 0x00, 0x0C, 0x0C, 0x06, 0x06, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x3F, 0x3F, 0x3F, 0x30, 0x30, 0x00, //1
    0x00, 0x00, 0x00, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00, //2
    0x00, 0x00, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, 0x00, //3
    0x00, 0x00, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, //4
    0x00, 0x00, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, 0x00, //5
    0x00, 0x00, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, 0x00, //6
    0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x00, 0x00, //7
    0x00, 0x00, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, 0x00, //8
    0x00, 0x00, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x00, 0x00, //9
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x3E, 0x3E, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x3E, 0x3E, 0x3E, 0x00, 0x00, 0x00, 0x00, //:
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x3E, 0x3E, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x1E, 0x0E, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, //,
    0x80, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, //<
    0x00, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, //=
    0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x01, 0x00, //>
    0x00, 0x18, 0x18, 0x0C, 0x06, 0x06, 0x06, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x67, 0x07, 0x00, 0x00, 0x00, 0x00, //?
    0x00, 0x00, 0xF0, 0x7C, 0xCE, 0xC6, 0xC6, 0xC6, 0x06, 0xFE, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x30, 0x27, 0x26, 0x06, 0x06, 0x06, 0x07, 0x07, 0x00, //@
    0x00, 0xFE, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x3F, 0x3F, 0x3F, 0x01, 0x01, 0x01, 0x01, 0x3F, 0x3F, 0x3F, 0x00, //A
    0x00, 0x02, 0x03, 0x03, 0xFF, 0xFF, 0xC3, 0xC3, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x20, 0x30, 0x30, 0x3F, 0x3F, 0x30, 0x30, 0x3F, 0x3F, 0x3F, 0x00, //B
    0x00, 0xFE, 0xFF, 0xFF, 0x07, 0x07, 0x07, 0x07, 0x07, 0x03, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x38, 0x38, 0x38, 0x38, 0x38, 0x30, 0x00, 0x00, //C
    0x00, 0x06, 0x07, 0x07, 0xFF, 0xFF, 0x07, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x18, 0x38, 0x38, 0x3F, 0x3F, 0x38, 0x38, 0x3F, 0x3F, 0x3F, 0x00, //D
    0x00, 0xFE, 0xFF, 0xFF, 0xC7, 0xC7, 0xC7, 0xC7, 0x07, 0x03, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x38, 0x38, 0x38, 0x38, 0x38, 0x30, 0x00, 0x00, //E
    0x00, 0xFE, 0xFF, 0xFF, 0xC7, 0xC7, 0xC7, 0xC7, 0x47, 0x03, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //F
    0x00, 0xFE, 0xFF, 0xFF, 0x07, 0x07, 0x87, 0x87, 0x87, 0x87, 0x03, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x38, 0x38, 0x39, 0x39, 0x39, 0x3F, 0x1F, 0x00, //G
    0x00, 0xFE, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F, 0x1F, 0x00, //H
    0x00, 0x06, 0x07, 0x07, 0x07, 0xFF, 0xFF, 0x07, 0x07, 0x07, 0x06, 0x00, 0x00, 0x18, 0x38, 0x38, 0x38, 0x3F, 0x3F, 0x38, 0x38, 0x38, 0x18, 0x00, //I
    0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x3C, 0x38, 0x38, 0x38, 0x38, 0x3F, 0x3F, 0x1F, 0x00, //J
    0x00, 0xFE, 0xFF, 0xFF, 0xC0, 0xC0, 0xE0, 0x30, 0x18, 0x0C, 0x06, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x01, 0x01, 0x01, 0x03, 0x06, 0x0C, 0x18, 0x00, //K
    0x00, 0xFE, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x3C, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x30, //L
    0x00, 0xFE, 0xFF, 0xFF, 0x0E, 0x78, 0x78, 0x0E, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x1F, 0x00, //M
    0x00, 0xFE, 0xFF, 0xFF, 0x3E, 0xF0, 0xC0, 0x80, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x1F, 0x00, 0x00, 0x03, 0x07, 0x1F, 0x3F, 0x1F, 0x00, //N
    0x00, 0xFE, 0xFF, 0xFF, 0x0F, 0x07, 0x07, 0x0F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x3C, 0x38, 0x38, 0x3C, 0x3F, 0x3F, 0x1F, 0x00, //O
    0x00, 0xFE, 0xFF, 0xFF, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //P
    0x00, 0xFE, 0xFF, 0xFF, 0x0F, 0x87, 0x07, 0x0F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x3C, 0x39, 0x3B, 0x3E, 0x3F, 0x3F, 0x1F, 0x00, //Q
    0x00, 0xFE, 0xFF, 0xFF, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0x7E, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x00, 0x00, 0x00, //R
    0x00, 0x7E, 0xFF, 0xFF, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC6, 0x00, 0x00, 0x00, 0x18, 0x38, 0x38, 0x38, 0x38, 0x38, 0x3F, 0x3F, 0x1F, 0x00, 0x00, //S
    0x00, 0x03, 0x07, 0x07, 0x07, 0xFF, 0xFF, 0x07, 0x07, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, //T
    0x00, 0xFE, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x3C, 0x38, 0x38, 0x3C, 0x3F, 0x3F, 0x1F, 0x00, //U
    0x00, 0x0F, 0x3F, 0xFC, 0xC0, 0x00, 0x00, 0xC0, 0xFC, 0x3F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x1E, 0x1E, 0x0F, 0x01, 0x00, 0x00, 0x00, //V
    0x00, 0xFE, 0xFF, 0xFF, 0x00, 0xC0, 0xC0, 0x00, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x1F, 0x3F, 0x3F, 0x1E, 0x07, 0x07, 0x1E, 0x3F, 0x3F, 0x1F, 0x00, //W
    0x00, 0x07, 0x0E, 0x9C, 0xF8, 0xF0, 0xF0, 0xDC, 0x8E, 0x07, 0x03, 0x00, 0x00, 0x0E, 0x07, 0x03, 0x01, 0x01, 0x01, 0x01, 0x03, 0x07, 0x0E, 0x00, //X
    0x00, 0x7E, 0xFF, 0xFF, 0xE0, 0xC0, 0xC0, 0xE0, 0xFE, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x20, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3F, 0x3F, 0x1F, 0x00, //Y
    0x00, 0x06, 0x07, 0x07, 0x87, 0xC7, 0xE7, 0x77, 0x3F, 0x1F, 0x0E, 0x00, 0x00, 0x1C, 0x3E, 0x3F, 0x3B, 0x39, 0x38, 0x38, 0x38, 0x38, 0x18, 0x00, //Z
};

// Font "MediumNumbers"
// Each char is encoded on 24 bytes => 12px (width) x 16px (height = 2 rows)
// + 4 config bytes at the beginning
static const uint8_t Numbers12_16[] =
    {
        0x0c /* char width = 12 px */, 0x10 /* char height = 16px = 2 rows */, 0x2d /* first char ASCII code = 0x2D */, 0x0d /* contains 13 chars */,
        0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, // - (ASCII code 0x2D)
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, // .
        0x00, 0x00, 0x02, 0x86, 0x86, 0x86, 0x86, 0x86, 0x86, 0x02, 0x00, 0x00, 0x00, 0x00, 0x81, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x81, 0x00, 0x00, // /
        0x00, 0xfc, 0x7a, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x7a, 0xfc, 0x00, 0x00, 0x7e, 0xbc, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xbc, 0x7e, 0x00, // 0
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x7e, 0x00, // 1
        0x00, 0x00, 0x02, 0x86, 0x86, 0x86, 0x86, 0x86, 0x86, 0x7a, 0xfc, 0x00, 0x00, 0x7e, 0xbd, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0x81, 0x00, 0x00, // 2
        0x00, 0x00, 0x02, 0x86, 0x86, 0x86, 0x86, 0x86, 0x86, 0x7a, 0xfc, 0x00, 0x00, 0x00, 0x81, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xbd, 0x7e, 0x00, // 3
        0x00, 0xfc, 0x78, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x78, 0xfc, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x3d, 0x7e, 0x00, // 4
        0x00, 0xfc, 0x7a, 0x86, 0x86, 0x86, 0x86, 0x86, 0x86, 0x02, 0x00, 0x00, 0x00, 0x00, 0x81, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xbd, 0x7e, 0x00, // 5
        0x00, 0xfc, 0x7a, 0x86, 0x86, 0x86, 0x86, 0x86, 0x86, 0x02, 0x00, 0x00, 0x00, 0x7e, 0xbd, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xbd, 0x7e, 0x00, // 6
        0x00, 0x00, 0x02, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x7a, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x7e, 0x00, // 7
        0x00, 0xfc, 0x7a, 0x86, 0x86, 0x86, 0x86, 0x86, 0x86, 0x7a, 0xfc, 0x00, 0x00, 0x7e, 0xbd, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xbd, 0x7e, 0x00, // 8
        0x00, 0xfc, 0x7a, 0x86, 0x86, 0x86, 0x86, 0x86, 0x86, 0x7a, 0xfc, 0x00, 0x00, 0x00, 0x81, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xbd, 0x7e, 0x00, // 9
};

// Font "BigNumbers"
// Each char is encoded on 42 bytes => 14px (width) x 24px (height = 3 rows)
// + 4 config bytes at the beginning
static const uint8_t Numbers14_24[] =
    {
        0x0e /* char width = 14 px */, 0x18 /* char height = 24px = 3 rows */, 0x2d /* first char ASCII code = 0x2D */, 0x0d /* contains 13 chars */,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // -
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xe0, 0xe0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, // .
        0x00, 0x00, 0x02, 0x06, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xc0, 0x80, 0x00, 0x00, // /
        0x00, 0xfc, 0xfa, 0xf6, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0xf6, 0xfa, 0xfc, 0x00, 0x00, 0xef, 0xc7, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xc7, 0xef, 0x00, 0x00, 0x7f, 0xbf, 0xdf, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xdf, 0xbf, 0x7f, 0x00, // 0
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf8, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xc7, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x3f, 0x7f, 0x00, // 1
        0x00, 0x00, 0x02, 0x06, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0xf6, 0xfa, 0xfc, 0x00, 0x00, 0xe0, 0xd0, 0xb8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x3b, 0x17, 0x0f, 0x00, 0x00, 0x7f, 0xbf, 0xdf, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xc0, 0x80, 0x00, 0x00, // 2
        0x00, 0x00, 0x02, 0x06, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0xf6, 0xfa, 0xfc, 0x00, 0x00, 0x00, 0x10, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xbb, 0xd7, 0xef, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xdf, 0xbf, 0x7f, 0x00, // 3
        0x00, 0xfc, 0xf8, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf8, 0xfc, 0x00, 0x00, 0x0f, 0x17, 0x3b, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xbb, 0xd7, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x3f, 0x7f, 0x00, // 4
        0x00, 0xfc, 0xfa, 0xf6, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x17, 0x3b, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xb8, 0xd0, 0xe0, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xdf, 0xbf, 0x7f, 0x00, // 5
        0x00, 0xfc, 0xfa, 0xf6, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x06, 0x02, 0x00, 0x00, 0x00, 0xef, 0xd7, 0xbb, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xb8, 0xd0, 0xe0, 0x00, 0x00, 0x7f, 0xbf, 0xdf, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xdf, 0xbf, 0x7f, 0x00, // 6
        0x00, 0x00, 0x02, 0x06, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0xf6, 0xfa, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xc7, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x3f, 0x7f, 0x00, // 7
        0x00, 0xfc, 0xfa, 0xf6, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0xf6, 0xfa, 0xfc, 0x00, 0x00, 0xef, 0xd7, 0xbb, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xbb, 0xd7, 0xef, 0x00, 0x00, 0x7f, 0xbf, 0xdf, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xdf, 0xbf, 0x7f, 0x00, // 8
        0x00, 0xfc, 0xfa, 0xf6, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0xf6, 0xfa, 0xfc, 0x00, 0x00, 0x0f, 0x17, 0x3b, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xbb, 0xd7, 0xef, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xdf, 0xbf, 0x7f, 0x00, // 9

};

#endif